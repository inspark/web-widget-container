/* ==========================================================================
   #GRID RESPONSIVENESS
   ========================================================================== */

/*
Responsiveness

Deprecated: For flexbox grid use Flexbox object. It has much more options and better integration to SEM NEXT UI.
We’ll drop support for these wikis on April 20, 2017.

The grid can be instructed to go full width at certain break points to maximise the screen space and help produce great user experiences on all sorts of devices.

The grid has a fit or full class modifier that is used at different screen sizes.

`.o-grid_{ small | medium | large }-{ fit | full }`

The below example will display the cells full width for small and large size screens. For medium screens the cells will
 adjust to fit the available space. Try it out, either resize your browser or rotate your phone into landscape.

markup:
<div class="o-grid o-grid_small-full o-grid_medium-fit o-grid_large-full o-grid_demo">
    <div class="o-grid__cell">
        <div class="o-grid-text">first</div>
    </div>
    <div class="o-grid__cell">
        <div class="o-grid-text">second</div>
    </div>
    <div class="o-grid__cell">
        <div class="o-grid-text">third</div>
    </div>
</div>

Styleguide 5.14.6
*/

/*
Responsive Suffixes

Deprecated: For flexbox grid use Flexbox object. It has much more options and better integration to SEM NEXT UI.
We’ll drop support for these wikis on April 20, 2017.

As well as grid level responsiveness you also have control over the cells within a grid.
Individual cells can change width at specific break points by using responsive suffixes .

As the viewport increases in size the cells go from 100% wide to 33% wide one after another, rather than all at once.

The suffixes apply to the screen sizes and up, in a mobile first manner. In other words:

Set cell width to 33% when screen width is greater than or equal to `xsmall | small | medium | large | xlarge | super`

markup:
<div class="o-grid o-grid_wrap o-grid_demo">
    <div class="o-grid__cell o-grid__cell_width-100 o-grid__cell_width-33@small">
        <div class="o-grid-text">small</div>
    </div>
    <div class="o-grid__cell o-grid__cell_width-100 o-grid__cell_width-33@medium">
        <div class="o-grid-text">medium</div>
    </div>
    <div class="o-grid__cell o-grid__cell_width-100 o-grid__cell_width-33@large">
        <div class="o-grid-text">large</div>
    </div>
</div>

Styleguide 5.14.7
*/

.o-grid {
  @include screen_xsmall-only {
    &.o-grid_xsmall-fit > .o-grid__cell:not([class*="o-grid__cell_width"]) {
      @include grid__cell_fit;
    }

    &.o-grid_xsmall-full {
      @include grid_full;
    }

    &.o-grid_xsmall-full > .o-grid__cell {
      @include grid__cell_full;
    }
  }

  @include screen_small-only {
    &.o-grid_small-fit > .o-grid__cell:not([class*="o-grid__cell_width"]) {
      @include grid__cell_fit;
    }

    &.o-grid_small-full {
      @include grid_full;
    }

    &.o-grid_small-full > .o-grid__cell {
      @include grid__cell_full;
    }
  }

  @include screen_medium-only {
    &.o-grid_medium-fit > .o-grid__cell:not([class*="o-grid__cell_width"]) {
      @include grid__cell_fit;
    }

    &.o-grid_medium-full {
      @include grid_full;
    }

    &.o-grid_medium-full > .o-grid__cell {
      @include grid__cell_full;
    }
  }

  @include screen_large-only {
    &.o-grid_large-fit > .o-grid__cell:not([class*="o-grid__cell_width"]) {
      @include grid__cell_fit;
    }

    &.o-grid_large-full {
      @include grid_full;
    }

    &.o-grid_large-full > .o-grid__cell {
      @include grid__cell_full;
    }
  }

  @include screen_xlarge-only {
    &.o-grid_xlarge-fit > .o-grid__cell:not([class*="o-grid__cell_width"]) {
      @include grid__cell_fit;
    }

    &.o-grid_xlarge-full {
      @include grid_full;
    }

    &.o-grid_xlarge-full > .o-grid__cell {
      @include grid__cell_full;
    }
  }

  @include screen_super-only {
    &.o-grid_super-fit > .o-grid__cell:not([class*="o-grid__cell_width"]) {
      @include grid__cell_fit;
    }

    &.o-grid_super-full {
      @include grid_full;
    }

    &.o-grid_super-full > .o-grid__cell {
      @include grid__cell_full;
    }
  }

  @include screen_xsmall-and-up {
    & {
      @include grid__responsive(xsmall);
    }

    &__cell {
      @include grid__responsive-cells(xsmall);
    }
  }

  @include screen_small-and-up {
    & {
      @include grid__responsive(small);
    }

    &__cell {
      @include grid__responsive-cells(small);
    }
  }

  @include screen_medium-and-up {
    & {
      @include grid__responsive(medium);
    }

    &__cell {
      @include grid__responsive-cells(medium);
    }
  }

  @include screen_large-and-up {
    & {
      @include grid__responsive(large);
    }

    &__cell {
      @include grid__responsive-cells(large);
    }
  }

  @include screen_larger-and-up {
    & {
      @include grid__responsive(larger);
    }

    &__cell {
      @include grid__responsive-cells(larger);
    }
  }

  @include screen_xlarge-and-up {
    & {
      @include grid__responsive(xlarge);
    }

    &__cell {
      @include grid__responsive-cells(xlarge);
    }
  }

  @include screen_super-and-up {
    & {
      @include grid__responsive(super);
    }

    &__cell {
      @include grid__responsive-cells(super);
    }
  }
}
